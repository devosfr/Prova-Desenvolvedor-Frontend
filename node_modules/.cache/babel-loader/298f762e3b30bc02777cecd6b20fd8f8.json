{"ast":null,"code":"import React from 'react';\nimport logo from \"./logo.svg\";\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\nimport { BiAddToQueue } from \"react-icons/bi\";\nimport axios from \"axios\";\nimport { Switch, Route, Link } from 'react-router-dom';\n\nclass Lista extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      initialState\n    };\n  }\n\n  componentWillMount() {\n    axios.get(baseURL).then(resp => {\n      this.setState({\n        lista: resp.data\n      });\n    });\n  }\n\n  clear() {\n    this.setState({\n      unop: initialState.unop\n    });\n  }\n\n  save() {\n    const unop = this.state.unop;\n    const method = unop.id ? 'put' : 'post';\n    const url = unop.id ? `${baseURL}/${unop.id}` : baseURL;\n    axios[method](url, unop).then(resp => {\n      const list = this.getUpdateList(resp.data);\n      this.setState({\n        unop: initialState.unop,\n        list\n      });\n    });\n  }\n\n  getUpdateList(unop, add = true) {\n    const list = this.state.lista.filter(u => u.id != unop.id);\n    if (add) list.unshift(unop);\n    return list;\n  }\n\n  updateField(event) {\n    const unop = this.state.unop;\n    unop[event.target.nome] = event.target.value;\n    this.setState({\n      unop\n    });\n  }\n\n  mascara_cnpj(cnpj) {\n    // MARK\n    console.log(this.state.initialState.unop.cnpj.value);\n\n    if (this.state.initialState.unop.cnpj.length == 2 || cnpj.value.length == 6) {\n      cnpj.value = cnpj.value + \".\";\n    } else if (cnpj.value.length == 10) {\n      cnpj.value = cnpj.value + \"/\";\n    } else if (cnpj.value.length == 15) {\n      cnpj.value = cnpj.value + \"-\";\n    }\n\n    ;\n  }\n\n  render() {\n    return {\n      \"unop\": [{\n        \"id\": 10001,\n        \"nome\": \"Minuano\",\n        \"cnpj\": \"36424694000131\",\n        \"situação\": \"Ativa\",\n        \"lista-turnos\": [{}, {}],\n        \"lista-restaurantes\": [{}, {}],\n        \"lista-feriados\": [{}, {}]\n      }, {\n        \"id\": 10002,\n        \"nome\": \"Exatron\",\n        \"cnpj\": \"22150096000107\",\n        \"situação\": \"Ativa\",\n        \"lista-turnos\": [{}, {}],\n        \"lista-restaurantes\": [{}, {}],\n        \"lista-feriados\": [{}, {}]\n      }, {\n        \"id\": 10003,\n        \"nome\": \"Planalto\",\n        \"cnpj\": \"54284490000124\",\n        \"situação\": \"Ativa\",\n        \"lista-turnos\": [{\n          \"id\": 1,\n          \"nome\": \"Manhã\"\n        }, {\n          \"id\": 2,\n          \"nome\": \"Tarde\"\n        }, {\n          \"id\": 2,\n          \"nome\": \"Noite\"\n        }],\n        \"lista-restaurantes\": [{\n          \"id\": 1,\n          \"nome\": \"Restaurante 1\"\n        }, {\n          \"id\": 2,\n          \"nome\": \"Restaurante 2\"\n        }, {\n          \"id\": 2,\n          \"nome\": \"Restaurante 3\"\n        }],\n        \"lista-feriados\": [{\n          \"id\": 1,\n          \"nome\": \"13 de Agosto de 2019\"\n        }, {\n          \"id\": 2,\n          \"nome\": \"15 de Novembro de 2019\"\n        }, {\n          \"id\": 2,\n          \"nome\": \"24 de Dezembro de 2019\"\n        }]\n      }, {\n        \"id\": 10004,\n        \"nome\": \"Frigorifico Silva Ltda\",\n        \"cnpj\": \"47337485000177\",\n        \"situação\": \"Ativa\",\n        \"lista-turnos\": [{}, {}],\n        \"lista-restaurantes\": [{}, {}],\n        \"lista-feriados\": [{}, {}]\n      }]\n    };\n  }\n\n}\n\nexport default Lista;","map":{"version":3,"sources":["E:/wamp64/www/TESTE SPLENDA/TGP/src/Lista.js"],"names":["React","FaEdit","FaTrashAlt","BiAddToQueue","axios","Switch","Route","Link","Lista","Component","constructor","state","initialState","componentWillMount","get","baseURL","then","resp","setState","lista","data","clear","unop","save","method","id","url","list","getUpdateList","add","filter","u","unshift","updateField","event","target","nome","value","mascara_cnpj","cnpj","console","log","length","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\nimport { BiAddToQueue } from \"react-icons/bi\";\nimport axios from \"axios\";\nimport { Switch, Route, Link } from 'react-router-dom';\n\n\n\n\nclass Lista extends React.Component {\n\n\n\n  constructor(){\n    super();\n    this.state = {initialState};\n  }\n\n  componentWillMount(){\n    axios.get(baseURL).then(resp => {\n      this.setState({ lista: resp.data });\n    })\n }\n\n  clear(){\n    this.setState({unop:initialState.unop});\n  }\n\n  save(){\n    const unop = this.state.unop;\n    const method = unop.id?'put':'post';\n    const url = unop.id?`${baseURL}/${unop.id}`:baseURL;\n    axios[method](url, unop).then(resp => {\n      const list = this.getUpdateList(resp.data);\n      this.setState({unop:initialState.unop, list});\n    })\n  }\n\n  getUpdateList(unop, add = true){\n    const list = this.state.lista.filter(u=>u.id != unop.id);\n    if(add) list.unshift(unop);\n    return list \n  }\n\n\n  updateField(event){\n    const unop = this.state.unop;\n    unop[event.target.nome] = event.target.value;\n    this.setState({unop});\n  }\n\n\n  mascara_cnpj(cnpj){\n  // MARK\n\n    console.log(this.state.initialState.unop.cnpj.value);\n    if(this.state.initialState.unop.cnpj.length == 2 || cnpj.value.length == 6){\n      cnpj.value = cnpj.value + \".\";\n    }else if(cnpj.value.length == 10){\n      cnpj.value = cnpj.value + \"/\";\n    }else if(cnpj.value.length == 15){\n      cnpj.value = cnpj.value + \"-\";\n    };\n\n    \n  }\n\n\n\n  render(){\n\n\n    return (\n      \n      {\n        \"unop\": [\n      \n            {\n                \"id\": 10001,\n                \"nome\": \"Minuano\",\n                \"cnpj\": \"36424694000131\",\n                \"situação\": \"Ativa\",\n                \"lista-turnos\": [\n                    {},\n                    {}\n                ],\n                \"lista-restaurantes\": [\n                    {},\n                    {}\n                ],\n                \"lista-feriados\": [\n                    {},\n                    {}\n                ]\n            },\n            {\n                \"id\": 10002,\n                \"nome\": \"Exatron\",\n                \"cnpj\": \"22150096000107\",\n                \"situação\": \"Ativa\",\n                \"lista-turnos\": [\n                    {},\n                    {}\n                ],\n                \"lista-restaurantes\": [\n                    {},\n                    {}\n                ],\n                \"lista-feriados\": [\n                    {},\n                    {}\n                ]\n            },\n            {\n                \"id\": 10003,\n                \"nome\": \"Planalto\",\n                \"cnpj\": \"54284490000124\",\n                \"situação\": \"Ativa\",\n                \"lista-turnos\": [\n                    {\n                     \"id\": 1,\n                     \"nome\":\"Manhã\"\n                    },\n                    {\n                     \"id\": 2,\n                     \"nome\":\"Tarde\"\n                    },\n                    {\n                    \"id\": 2,\n                    \"nome\":\"Noite\"\n                    }\n                ],\n                \"lista-restaurantes\": [\n                       {\n                        \"id\": 1,\n                        \"nome\":\"Restaurante 1\"\n                       },\n                       {\n                        \"id\": 2,\n                        \"nome\":\"Restaurante 2\"\n                       },\n                       {\n                       \"id\": 2,\n                       \"nome\":\"Restaurante 3\"\n                       }\n                ],\n                \"lista-feriados\": [\n                       {\n                        \"id\": 1,\n                        \"nome\":\"13 de Agosto de 2019\"\n                       },\n                       {\n                        \"id\": 2,\n                        \"nome\":\"15 de Novembro de 2019\"\n                       },\n                       {\n                       \"id\": 2,\n                       \"nome\":\"24 de Dezembro de 2019\"\n                       }\n                ]\n            },\n            {\n                \"id\": 10004,\n                \"nome\": \"Frigorifico Silva Ltda\",\n                \"cnpj\": \"47337485000177\",\n                \"situação\": \"Ativa\",\n                \"lista-turnos\": [\n                    {},\n                    {}\n                ],\n                \"lista-restaurantes\": [\n                    {},\n                    {}\n                ],\n                \"lista-feriados\": [\n                    {},\n                    {}\n                ]\n            }\n      \n      \n      \n      \n      \n      \n        ]\n      \n      }\n    )\n  \n  \n  \n\n\n\n  }\n\n  \n\n}\n\n\n\nexport default Lista;\n"]},"metadata":{},"sourceType":"module"}